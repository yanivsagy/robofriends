{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","padding","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAgBeA,EAbF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAEzB,OACI,sBAAKC,UAAU,6EAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,aAAyCG,IAAG,gBAAWH,KAC/D,gCACI,oBAAIC,UAAU,sBAAd,SAAqCH,IACrC,mBAAGG,UAAU,kBAAb,SAAgCF,WCYjCK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAOC,GACf,OACI,cAAC,EAAD,CAEIR,GAAIO,EAAMP,GACVF,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,OAHRS,SCMlBC,G,MAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,QCAXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,QAAS,QAAxF,SACKL,EAAMM,YCiBJC,E,kDAnBX,WAAYP,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OADqBG,KAAKJ,MAAlBC,SAER,+DACAG,KAAKZ,MAAMM,a,GAhBSQ,aC8CbC,G,wDAxCX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACTlB,OAAQ,GACR4B,YAAa,IAJP,E,gEAQO,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,+BAOrC,IAAD,EAC2Bb,KAAKJ,MAA7BlB,EADH,EACGA,OAAQ4B,EADX,EACWA,YACVQ,EAAiBpC,EAAOqC,QAAO,SAAAnC,GACjC,OAAOA,EAAMT,KAAK6C,cAAcC,SAASX,EAAYU,kBAEzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAciB,KAAKI,iBAC9B,qBAAI9B,UAAU,KAAd,UAAoBwC,EAAeI,OAAnC,uBACA,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxC,OAAQoC,WARlC,oBAAIxC,UAAU,MAAd,4B,GAzBU4B,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aa6f3805.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import './Card.css'\n\nconst Card = ({ name, email, id}) => {\n    // const { name, email, id } = props;\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow pointer:hover: pointer bw2 shadow-5 tc'>\n            <img src={`https://robohash.org/${id}?set=set3`} alt={`robot ${id}`} />\n            <div>\n                <h2 className='helvetica black fw4'>{name}</h2>\n                <p className='helvetica black'>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((robot, i) => {\n                    return (\n                        <Card\n                            key={i}\n                            id={robot.id}\n                            name={robot.name}\n                            email={robot.email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\nimport './SearchBox.css';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='Search Robots'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '5px solid black', height: '900px', padding: '20px' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        const { hasError } = this.state;\n        return (hasError) ?\n        <h1>Oops! Something went wrong...</h1> :\n        this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n    }\n\n    onSearchChange = (event) => {   //make sure you use this function syntax with = () => {} so the 'this' refers to App\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        return !robots.length ?   //if robots.length is 0, this will evaluate to !0 which is true\n        <h1 className=\"ma3\">Loading...</h1> :\n        (\n            <div className=\"tc\">\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <h2 className='f2'>{filteredRobots.length} Friends Found...</h2>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}